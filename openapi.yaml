openapi: 3.0.1
info:
  title: Pendo Rest API
  description: 'The v1 API allows developers to request and modify resources like Guides, Visitor Metadata, and Reports and to make Aggregation queries using a MongoDB-like query language. All of the charts, graphs, and reports displayed in the main Pendo application are generated using similar queries.'
  contact:
    email: help@pendo.io 
  version: 0.0.1
externalDocs:
  description: Find out more about Pendo API
  url: https://developers.pendo.io/docs/?bash#v1-api
servers:
- url:  https://app.pendo.io/api/v1
tags:
- name: Account
  description: The account endpoint allows you to retrieve a single accountâ€™s specific details by supplying an account ID as part of your request. The {accountId} referenced below can be found on the accounts list page or at the end of the url when viewing an account details page.
- name: Metadata
  description: The metadata endpoint allows to you retrieve and update Account/Visitor Metadata values. Metadata is used to gather insights about the users behavior in your app.
paths:
  /account/{accountId}:
   get:
      tags:
      - Account
      summary: Get Account Object
      operationId: getAccount
      parameters:
      - name: accountId
        in: path
        description: ID of Account to return. URL encoded account id or b64_XXXX, where XXXX is a URL-safe base64 encoded account Id
        required: true
        schema:
          type: string
          format: byte
      responses:
          200:
            description: Response is sent as body
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Account'
      security:
      - pendo_integration_key: []


  /metadata/schema/{kind}:
    get:
      tags:
      - Metadata
      description: 'Gets the metadata schema for a single kind of metadata (visitor or account).'
      parameters:
      - name: kind
        in: path
        description: 'Specify the kind of metadata Account or Visitor'
        required: true
        schema:
          type: string
      responses:
        200:
          description: |
            Returns a collection of metadata objects. 

            `Agent`: Metadata type passed through the installation snippet.

            `Auto`: Automatically generated by Pendo.

            `Custom`: Custom Pendo only fields to help analyze aspects of your data

            `Pendo`: Metadata representing the current blacklistguides setting for the visitor.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/accountSchema'
                  - $ref: '#/components/schemas/visitorSchema'
      security:
        - pendo_integration_key: []
        

  /metadata/{kind}/{group}/value/{id}/{fieldName}:
    put:
      tags:
      - Metadata
      description: 'Sets the value of an agent or custom metadata field on an account or visitor. If setting value for a custom field, the field must already have been created in the Data Mappings.'
      parameters:
        - name: kind
          in: path
          description:  "`visitor` or `account`"
          required: true
          schema:
            type: string
        - name: group
          in: path
          description: "type of metadata field: `agent` or `custom`"
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: "id of the `visitor` or `account` being updated"
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          schema:
            type: string
          description: name of the metadata field being updated
          required: true
          example: Payment_Status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: Monthly_Pro
      responses:
        '200':
          description: The metadata value was updated
        404:
          description: Check to make sure the custom filed exists in Data Mappings.
  /metadata/{kind}/{group}/value:
    post:
      tags:
      - Metadata
      description: |
       Sets the value of multiple metadata fields on set of accounts or visitors. AKA: bulk update
       
       If setting custom fields, the fields must already have been created in the Data Mappings.

       Any number of records may be submitted for update, but the call is limited to five `(5) minutes`. Any calls that takes longer will timeout with a `408 Request Timeout`.
      parameters:
       - name: kind
         in: path
         description:  "`visitor` or `account`"
         schema:
           type: string
         required: true
       - name: group
         in: path
         description: "type of metadata filed: `agent` or `custom`"
         schema:
           type: string
         required: true
      requestBody:
        description: Metadata fileds must be in an array
        content:
          application/json:
            schema:
              type: array
              example: [{"visitorId":"4","values":{"firstname":"Quam","lastname":"Quis"}},{"visitorId":"45","values":{"firstname":"Vel","lastname":"Quam"}},{"visitorId":"63","values":{"firstname":"Eros","lastname":"Nam"}}]
      responses:
        '200':
          description: The bulk update completed
        400:
          description: The format is unacceptable due to malformed JSON or missing field mappings
        408: 
          description: The call took too long and timed out

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          example: "zeta and sons"
        metadata:
          type: object
          properties:
            agent:
              type: object
            auto:
              type: object
              properties:
                firstvisit:
                  type: integer
                  example: 1506349414089
                id: 
                  type: string
                  example: "Zeta and Sons"
                idhash:
                  type: integer
                  example: 1129480058
                lastupdated:
                  type: integer
                  example: 1506349414757
                lastvisited:
                  type: integer
                  example: 1506349414089
    accountSchema:
      type: object
      properties:
        agent:
          type: object
          properties:
            name:
              type: object
              properties:
                Type:
                  type: string
                DisplayName:
                  type: string
                ElementType:
                  type: string
                Dirty:
                  type: boolean
                  example: false
                sample:
                  type: string
                  example: org1234567
                isHidden: 
                  type: boolean
                  example: false
                isDeleted: 
                  type: boolean
                  example: false
                isCalculated:
                  type: boolean
                  example: false
                isPerapp:
                  type: boolean
                  example: false
                neverIndex:
                  type: boolean
                  example: false
        auto:
          properties:
            firstvisit:
              type: object
              properties:
                Type:
                  type: string
                  example: time
                DisplayName:
                  type: string
                  example: First Visit
                ElementType:
                  type: string
                ElementFormat:
                  type: string
                  example: milliseconds
                Dirty:
                  type: boolean
                  example: false
                isHidden: 
                  type: boolean
                  example: false
                isDeleted: 
                  type: boolean
                  example: false
                isCalculated:
                  type: boolean
                  example: false
                isPerapp:
                  type: boolean
                  example: false
                neverIndex:
                  type: boolean
                  example: false
        id:
           properties:
                Type:
                  type: string
                  example: string
                DisplayName:
                  type: string
                  example: Account ID
                ElementType:
                  type: string
                Dirty:
                  type: boolean
                  example: false                  
                isHidden: 
                  type: boolean
                  example: false
                isDeleted: 
                  type: boolean
                  example: false
                isCalculated:
                  type: boolean
                  example: false
                isPerapp:
                  type: boolean
                  example: false
                neverIndex:
                  type: boolean
                  example: false
        lastvisit:
          properties:
            firstvisit:
              type: object
              properties:
                Type:
                  type: string
                  example: time
                DisplayName:
                  type: string
                  example: Last Visit
                ElementType:
                  type: string
                ElementFormat:
                  type: string
                  example: milliseconds
                Dirty:
                  type: boolean
                  example: false
                isHidden: 
                  type: boolean
                  example: false
                isDeleted: 
                  type: boolean
                  example: false
                isCalculated:
                  type: boolean
                  example: false
                isPerapp:
                  type: boolean
                  example: false
                neverIndex:
                  type: boolean
                  example: false
        pendo:
          properties:
            donotprocess:
              type: object
              properties:
                Type:
                  type: string
                  example: boolean
                DisplayName:
                  type: string
                  example: Do Not Process
                ElementType:
                  type: string
                ElementFormat:
                  type: string
                Dirty:
                  type: boolean
                  example: false
                isHidden: 
                  type: boolean
                  example: false
                isDeleted: 
                  type: boolean
                  example: false
                isCalculated:
                  type: boolean
                  example: false
                isPerapp:
                  type: boolean
                  example: false
                neverIndex:
                  type: boolean
                  example: false
    visitorSchema:
      type: object
      properties:
        agent:
         properties:
           full_name:
             type: object
             properties:
               Type:
                 type: string
                 example: string

             

        
        
      
  securitySchemes:
    pendo_integration_key:
      type: apiKey
      in: header
      name: x-pendo-integration-key
